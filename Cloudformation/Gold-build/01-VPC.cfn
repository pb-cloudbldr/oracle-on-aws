{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Metadata": {},
    "Parameters": {
        "VPCStackName": {
            "Description": "VPC Name Prefix for all Objects",
            "Default": "MPLACE",
            "Type": "String"
        },
        "DNSName": {
            "Description": "Private domain for VPC",
            "Default": "oracle.cloudbldr.uk",
            "Type": "String"
        },
        "VPCCIDR": {
            "Description": "Class C address block for the VPC",
            "Default": "10.20.32.0",
            "Type": "String"
        }
    },
    "Mappings": {},
    "Conditions": {},
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Fn::Sub": "${VPCCIDR}/23"
                },
                "EnableDnsSupport": "True",
                "EnableDnsHostnames": "True",
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "VPC"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "priva": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "MapPublicIpOnLaunch": "False",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "VPC",
                                        "CidrBlock"
                                    ]
                                },
                                6,
                                6
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PrivatePrimary"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "privb": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "MapPublicIpOnLaunch": "False",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "VPC",
                                        "CidrBlock"
                                    ]
                                },
                                6,
                                6
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PrivateSecondary"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
		"privc": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "MapPublicIpOnLaunch": "False",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "VPC",
                                        "CidrBlock"
                                    ]
                                },
                                6,
                                6
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PrivateSecondary"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "privrtb": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PrivateRTB"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "privrtbassoca": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "priva"
                },
                "RouteTableId": {
                    "Ref": "privrtb"
                }
            }
        },
        "privrtbassocb": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "privb"
                },
                "RouteTableId": {
                    "Ref": "privrtb"
                }
            }
        },
        "privrtbassocc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "privc"
                },
                "RouteTableId": {
                    "Ref": "privrtb"
                }
            }
        },
        "ACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "ACL"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "acl1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "True",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "ACL"
                }
            }
        },
        "acl2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "ACL"
                }
            }
        },
        "aclpriva": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ACL"
                },
                "SubnetId": {
                    "Ref": "priva"
                }
            }
        },
        "aclprivb": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ACL"
                },
                "SubnetId": {
                    "Ref": "privb"
                }
            }
        },
        "aclprivc": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ACL"
                },
                "SubnetId": {
                    "Ref": "privc"
                }
            }
        },
        "PrivDNS": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "Name": {
                    "Ref": "DNSName"
                },
                "VPCs": [
                    {
                        "VPCId": {
                            "Ref": "VPC"
                        },
                        "VPCRegion": {
                            "Ref": "AWS::Region"
                        }
                    }
                ],
                "HostedZoneConfig": {
                    "Comment": {
                        "Fn::Join": [
                            "",
                            [
                                "Private Hosted zone for ",
                                {
                                    "Ref": "VPCStackName"
                                }
                            ]
                        ]
                    }
                },
                "HostedZoneTags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "DNSName"
                        }
                    }
                ]
            }
        },
        "PubDNS": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "Name": {
                    "Ref": "DNSName"
                },
                "HostedZoneConfig": {
                    "Comment": {
                        "Fn::Join": [
                            "",
                            [
                                "Public Hosted zone for ",
                                {
                                    "Ref": "VPCStackName"
                                }
                            ]
                        ]
                    }
                },
                "HostedZoneTags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "DNSName"
                        }
                    }
                ]
            }
        },
        "S3Endpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "privrtb"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".s3"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "Ec2Endpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "PrivateDnsEnabled": "true",
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".ec2"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SubnetIds": [
                    {
                        "Ref": "priva"
                    },
                    {
                        "Ref": "privb"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "endpointSG"
                    }
                ]
            }
        },
        "ssmEndpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "PrivateDnsEnabled": "true",
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".ssm"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SubnetIds": [
                    {
                        "Ref": "priva"
                    },
                    {
                        "Ref": "privb"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "endpointSG"
                    }
                ]
            }
        },
        "ssmMessagesEndpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "PrivateDnsEnabled": "true",
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".ssmmessages"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SubnetIds": [
                    {
                        "Ref": "priva"
                    },
                    {
                        "Ref": "privb"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "endpointSG"
                    }
                ]
            }
        },
        "puba": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "MapPublicIpOnLaunch": "True",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "VPC",
                                        "CidrBlock"
                                    ]
                                },
                                6,
                                6
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PublicPrimary"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "pubb": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "MapPublicIpOnLaunch": "True",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "VPC",
                                        "CidrBlock"
                                    ]
                                },
                                6,
                                6
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PublicSecondary"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "pubc": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "MapPublicIpOnLaunch": "True",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "VPC",
                                        "CidrBlock"
                                    ]
                                },
                                6,
                                6
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PublicSecondary"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "IGW"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "NATEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "NAT": {
            "Type": "AWS::EC2::NatGateway",
            "DependsOn": [
                "NATEIP"
            ],
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATEIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "puba"
                }
            }
        },
        "privtoNAT": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "privrtb"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NAT"
                }
            }
        },
        "IGWAssoc": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "IGW"
                }
            }
        },
        "pubrtb": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCStackName"
                                    },
                                    "PublicRTB"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "pubtoIGW": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "pubrtb"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                }
            }
        },
        "pubrtbassoca": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "puba"
                },
                "RouteTableId": {
                    "Ref": "pubrtb"
                }
            }
        },
        "pubrtbassocb": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "pubb"
                },
                "RouteTableId": {
                    "Ref": "pubrtb"
                }
            }
        },
        "pubrtbassocc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "pubc"
                },
                "RouteTableId": {
                    "Ref": "pubrtb"
                }
            }
        },
        "aclpuba": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ACL"
                },
                "SubnetId": {
                    "Ref": "puba"
                }
            }
        },
        "aclpubb": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ACL"
                },
                "SubnetId": {
                    "Ref": "pubb"
                }
            }
        },
        "aclpubc": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ACL"
                },
                "SubnetId": {
                    "Ref": "pubc"
                }
            }
        },
        "storageSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": {
                    "Fn::Sub": "${VPCStackName}-storageSG"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "Description": "Remote procedure call for NFS",
                        "FromPort": "111",
                        "ToPort": "111",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    },
					{
                        "IpProtocol": "udp",
                        "Description": "Remote procedure call for NFS",
                        "FromPort": "111",
                        "ToPort": "111",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    },
					{
                        "IpProtocol": "tcp",
                        "Description": "NFS server daemon",
                        "FromPort": "2049",
                        "ToPort": "2049",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    },
					{
                        "IpProtocol": "udp",
                        "Description": "NFS server daemon",
                        "FromPort": "2049",
                        "ToPort": "2049",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    },
					{
                        "IpProtocol": "tcp",
                        "Description": "NFS mount, status monitor, and lock daemon",
                        "FromPort": "20001",
                        "ToPort": "20003",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    },
					{
                        "IpProtocol": "udp",
                        "Description": "NFS mount, status monitor, and lock daemon",
                        "FromPort": "20001",
                        "ToPort": "20003",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${VPCStackName}-endpointSG"
                        }
                    }
                ]
            }
        },
        "endpointSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": {
                    "Fn::Sub": "${VPCStackName}-endpointSG"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "Description": "DB port from application",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${VPCStackName}-endpointSG"
                        }
                    }
                ]
            }
        },
        "FileStorageService": {
            "Type": "AWS::FSx::FileSystem",
            "Properties": {
                "FileSystemType": "OPENZFS",
                "StorageCapacity": 1024,
                "StorageType": "SSD",
                "SubnetIds": [
                    {
                        "Ref": "priva"
                    },
                    {
                        "Ref": "privb"
                    }
                ],
                "SecurityGroupIds": [
                    { "Ref" : "storageSG" }
                ],
                "OpenZFSConfiguration": {
                    "AutomaticBackupRetentionDays": 3,
                    "DailyAutomaticBackupStartTime": "02:00",
                    "DeploymentType": "MULTI_AZ_1",
                    "DiskIopsConfiguration": {
                        "Mode": "AUTOMATIC"
                    },
                    "PreferredSubnetId": {
                        "Ref": "priva"
                    },
                    "RouteTableIds": [
                        { "Ref" : "privrtb" }
                    ],
                    "ThroughputCapacity": 320,
                    "WeeklyMaintenanceStartTime": "4:16:30"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Oracle_storage_MAZ"
                    }
                ]
            }
        }
    },
    "Outputs": {}
}