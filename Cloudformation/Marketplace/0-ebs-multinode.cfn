{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Metadata": {

    },
    "Parameters": {
		"VPCStackName": {
			"Description": "VPC Name Prefix for all Objects",
			"Default" : "MPLACE",
			"Type": "String"
		},
		"DNSName": {
			"Description": "Private domain for VPC",
			"Default" : "oracle.cloudbldr.uk",
			"Type": "String"
		}    
    },
    "Mappings": {
            "SubnetMap" : {
                "vpc" : {"initial" : "10.20.32.0/21"},
                "aza" : {"priv": "10.20.32.128/25", "pub" : "10.20.32.0/25"},
                "azb" : {"priv": "10.20.33.128/25", "pub" : "10.20.33.0/25"}}
    },
    "Conditions": {

    },
    "Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": { "Fn::FindInMap" : [ "SubnetMap", "vpc", "initial" ]},
				"EnableDnsSupport": "True",
				"EnableDnsHostnames": "True",
				"InstanceTenancy": "default",
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "VPC"]]
					}
				}]
			}
        },
		"priva": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": "False",
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": { "Fn::FindInMap" : [ "SubnetMap", "aza", "priv" ]},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "PrivatePrimary"]]
					}
				}]
			}
		},
		"privb": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": "False",
				"AvailabilityZone": {
					"Fn::Select": ["1", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": { "Fn::FindInMap" : [ "SubnetMap", "azb", "priv" ]},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "PrivateSecondary"]]
					}
				}]
			}
		},
		"privrtb": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "PrivateRTB"]]
					}
				}]
			}
		},
		"privrtbassoca": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "priva"
				},
				"RouteTableId": {
					"Ref": "privrtb"
				}

			}
		},
		"privrtbassocb": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "privb"
				},
				"RouteTableId": {
					"Ref": "privrtb"
				}

			}
		},
		"ACL": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [

					{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["", [{
								"Ref": "VPCStackName"
							}, "ACL"]]
						}
					}
				]
			}
		},
		"acl1": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"CidrBlock": "0.0.0.0/0",
				"Egress": "True",
				"Protocol": "-1",
				"RuleAction": "allow",
				"RuleNumber": "100",
				"NetworkAclId": {
					"Ref": "ACL"
				}
			}
		},
		"acl2": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"CidrBlock": "0.0.0.0/0",
				"Protocol": "-1",
				"RuleAction": "allow",
				"RuleNumber": "100",
				"NetworkAclId": {
					"Ref": "ACL"
				}
			}
		},
		"aclpriva": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"NetworkAclId": {
					"Ref": "ACL"
				},
				"SubnetId": {
					"Ref": "priva"
				}
			}
		},
		"aclprivb": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"NetworkAclId": {
					"Ref": "ACL"
				},
				"SubnetId": {
					"Ref": "privb"
				}
			}
		},
		"PrivDNS": {
			"Type": "AWS::Route53::HostedZone",
			"Properties": {
				"Name": {
					"Ref": "DNSName"
				},
				"VPCs": [{
					"VPCId": {
						"Ref": "VPC"
					},
					"VPCRegion": {
						"Ref": "AWS::Region"
					}
				}],
				"HostedZoneConfig": {
					"Comment": {
						"Fn::Join": ["", ["Private Hosted zone for ", {
							"Ref": "VPCStackName"
						}]]
					}
				},
				"HostedZoneTags": [{
					"Key": "Name",
					"Value": {
						"Ref": "DNSName"
					}
				}]
			}
		},
		"PubDNS": {
			"Type": "AWS::Route53::HostedZone",
			"Properties": {
				"Name": {
					"Ref": "DNSName"
				},
				"HostedZoneConfig": {
					"Comment": {
						"Fn::Join": ["", ["Public Hosted zone for ", {
							"Ref": "VPCStackName"
						}]]
					}
				},
				"HostedZoneTags": [{
					"Key": "Name",
					"Value": {
						"Ref": "DNSName"
					}
				}]
			}
		},
		"S3Endpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
				"RouteTableIds": [{
					"Ref": "privrtb"
				}],
				"ServiceName": {
					"Fn::Join": ["", ["com.amazonaws.", {
						"Ref": "AWS::Region"
					}, ".s3"]]
				},
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"Ec2Endpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
                "VpcEndpointType": "Interface",
				"ServiceName": {
					"Fn::Join": ["", ["com.amazonaws.", {
						"Ref": "AWS::Region"
					}, ".ec2"]]
				},
				"VpcId": {
					"Ref": "VPC"
				},
                "SubnetIds" : [
                    {
                        "Ref" : "priva"
                    },
                    {
                        "Ref" : "privb"
                    } 
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "endpointSG"
                    }
                ]
			}
		},
		"ssmEndpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
                "VpcEndpointType": "Interface",
				"ServiceName": {
					"Fn::Join": ["", ["com.amazonaws.", {
						"Ref": "AWS::Region"
					}, ".ssm"]]
				},
				"VpcId": {
					"Ref": "VPC"
				},
                "SubnetIds" : [
                    {
                        "Ref" : "priva"
                    },
                    {
                        "Ref" : "privb"
                    } 
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "endpointSG"
                    }
                ]
			}
		},
		"puba": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": "True",
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": { "Fn::FindInMap" : [ "SubnetMap", "aza", "pub" ]},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "PublicPrimary"]]
					}
				}]
			}
		},
		"pubb": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": "True",
				"AvailabilityZone": {
					"Fn::Select": ["1", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": { "Fn::FindInMap" : [ "SubnetMap", "azb", "pub" ]},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "PublicSecondary"]]
					}
				}]
			}
		},
		"IGW": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "IGW"]]
					}
				}]
			}
		},
		"NATEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"NAT": {
			"Type": "AWS::EC2::NatGateway",
			"DependsOn": ["NATEIP"],
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["NATEIP", "AllocationId"]
				},
				"SubnetId": {
					"Ref": "puba"
				}
			}
		},
		"privtoNAT": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "privrtb"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {
					"Ref": "NAT"
				}
			}
		},
		"IGWAssoc": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "IGW"
				}
			}
		},
		"pubrtb": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["", [{
							"Ref": "VPCStackName"
						}, "PublicRTB"]]
					}
				}]
			}
		},

		"pubtoIGW": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "pubrtb"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "IGW"
				}
			}
		},
		"pubrtbassoca": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "puba"
				},
				"RouteTableId": {
					"Ref": "pubrtb"
				}

			}
		},
		"pubrtbassocb": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "pubb"
				},
				"RouteTableId": {
					"Ref": "pubrtb"
				}

			}
		},
		"aclpuba": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"NetworkAclId": {
					"Ref": "ACL"
				},
				"SubnetId": {
					"Ref": "puba"
				}
			}
		},
		"aclpubb": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"NetworkAclId": {
					"Ref": "ACL"
				},
				"SubnetId": {
					"Ref": "pubb"
				}
			}
		},
		"oracleHostRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["ec2.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
                    "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"],
				"RoleName": {
					"Fn::Sub": "${VPCStackName}-instance-role"
				}
			}
		},
		"oracleHostProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [{
					"Ref": "oracleHostRole"
				}]
			}
		},
		"databaseSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Sub": "${VPCStackName}-dbSG"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"Description": "DB port from application",
					"FromPort": "1522",
					"ToPort": "1522",
					"SourceSecurityGroupId": {
						"Ref": "appSG"
					}
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "-1",
					"FromPort": "-1",
					"ToPort": "-1",
					"CidrIp": 
                    { "Fn::FindInMap" : [ "SubnetMap", "vpc", "initial" ]}
				}],
				"VpcId": { "Ref": "VPC" },
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Sub": "${VPCStackName}-dbSG"
					}
				}]
			}
		},
		"appSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Sub": "${VPCStackName}-appSG"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"Description": "DB port from application",
					"FromPort": "8001",
					"ToPort": "8001",
					"SourceSecurityGroupId": {
						"Ref": "appLBSG"
					}
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "-1",
					"FromPort": "-1",
					"ToPort": "-1",
					"CidrIp": 
                    { "Fn::FindInMap" : [ "SubnetMap", "vpc", "initial" ]}
				}],
				"VpcId": { "Ref": "VPC" },
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Sub": "${VPCStackName}-appSG"
					}
				}]
			}
		},
		"appLBSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Sub": "${VPCStackName}-appLBSG"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"Description": "DB port from application",
					"FromPort": "443",
					"ToPort": "443",
					"CidrIp": "0.0.0.0/0"
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "-1",
					"FromPort": "-1",
					"ToPort": "-1",
					"CidrIp": 
                    { "Fn::FindInMap" : [ "SubnetMap", "vpc", "initial" ]}
				}],
				"VpcId": { "Ref": "VPC" },
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Sub": "${VPCStackName}-appLBSG"
					}
				}]
			}
		},
		"endpointSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Sub": "${VPCStackName}-endpointSG"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"Description": "DB port from application",
					"FromPort": "443",
					"ToPort": "443",
					"CidrIp": { "Fn::FindInMap" : [ "SubnetMap", "vpc", "initial" ]}
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "-1",
					"FromPort": "-1",
					"ToPort": "-1",
					"CidrIp": { "Fn::FindInMap" : [ "SubnetMap", "vpc", "initial" ]}
				}],
				"VpcId": { "Ref": "VPC" },
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Sub": "${VPCStackName}-endpointSG"
					}
				}]
			}
		}
    },
    "Outputs": {

    }
}